<launch>
  <!-- Arguments -->
  <arg name="model" default="waffle_pi"/>
  <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="-0.5"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="open_rviz" default="true"/>
  <arg name="map_file" default="$(find path_planning_visualizer)/maps/map.yaml"/>
  <arg name="move_forward_only" default="false"/>

  <!-- rviz -->
  <arg name="rvizconfig" default="$(find path_planning_visualizer)/rviz/turtlebot3_ros_world.rviz"/>
  <node if="$(arg open_rviz)" name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(arg rvizconfig)"/>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="odom" />
  </node>

  <!--Added ones -->
  <!-- ///////////////////// -->

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find path_planning_visualizer)/worlds/ros_world.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- //////////////////// -->
  <!--Up to here -->



  <!-- Static tf between map and odom -->
  <arg name="static_tf" default="true" />
  <node if="$(arg static_tf)" pkg="tf2_ros" type="static_transform_publisher" name="odom_wrt_map_tf" args="0 0 0 0 0 0 map odom" />

  <!-- move_base -->
  <include file="$(find path_planning_visualizer)/launch/turtlebot3_ros_world/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>

  <!-- Start service server that responds with a plan for global path planning -->
  <node pkg="path_planning_visualizer" name="global_path_planner" type="path_planning_server.py" output="screen"/> 

</launch>
